name: Checkmarx AST scan

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
      - staging

jobs:
  push_scan_target_branch:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0
      
      - name: Set Cxone param
        run: |
          param="--async --scan-types ${{vars.SCAN_TYPES}} --file-filter ${{vars.EXCLUDE_FOLDERS}} --project-groups ${{vars.GROUP}} --sast-preset-name ${{vars.PRESET_NAME}} --sast-incremental"
          echo "PARAM_CX_ONE=$param" >> $GITHUB_ENV       
          
      - name: Type scan
        id: pull_scan
        run: echo "Run on" ${{ github.event_name }}
      
      - name: Checkmarx One - Check vulnerabilities
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: ${{secrets.CHECKMARX_URL}}
          cx_tenant: ${{secrets.CX_TENANT}}
          cx_client_id: ${{secrets.CX_CLIENT_ID}}
          cx_client_secret: ${{secrets.CX_CLIENT_SECRET}}
          project_name: ${{github.repository_owner}}/${{github.event.repository.name}}
          repo_name: ${{github.event.repository.name}}
          namespace: ${{github.repository_owner}}
          pr_number: ${{github.event.number}}
          additional_params: --sast-incremental --sast-filter '!vul,!swagger,!docs,!*_test.go' --sca-filter '!root' --iac-security-filter '!infra'
          
  pull_request_scan_current_branch:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.2.0

      - name: Type scan
        id: pull_request_scan
        run : echo "Run on" ${{ github.event_name }}
      
      - name: Set Cxone param
        run: |
          if [ ${{vars.MODO_ASYNC}} == 'true' ]; then
            param="--async --scan-types ${{vars.SCAN_TYPES}} --file-filter ${{vars.EXCLUDE_FOLDERS}} --project-groups ${{vars.GROUP}} --sast-preset-name ${{vars.PRESET_NAME}} --sast-incremental"
            echo "PARAM_CX_ONE=$param" >> $GITHUB_ENV       
          elif [ ${{vars.MODO_ASYNC}} == 'false' -a ${{vars.SECURITY_GATE}} == 'false' ]; then
            param="--scan-types ${{vars.SCAN_TYPES}} --file-filter ${{vars.EXCLUDE_FOLDERS}} --project-groups ${{vars.GROUP}} --sast-preset-name ${{vars.PRESET_NAME}} --sast-incremental"
            echo "PARAM_CX_ONE=$param" >> $GITHUB_ENV
          else
            param="--scan-types ${{vars.SCAN_TYPES}} --file-filter ${{vars.EXCLUDE_FOLDERS}} --project-groups ${{vars.GROUP}} --sast-preset-name ${{vars.PRESET_NAME}} ${{vars.SECURITY_GATE_VALUE}} --sast-incremental"
            echo "PARAM_CX_ONE=$param" >> $GITHUB_ENV
          fi

      - name: Checkmarx One - Check vulnerabilities
        uses: checkmarx/ast-github-action@main
        with:
          base_uri: ${{secrets.CHECKMARX_URL}}
          cx_tenant: ${{secrets.CX_TENANT}}
          cx_client_id: ${{secrets.CX_CLIENT_ID}}
          cx_client_secret: ${{secrets.CX_CLIENT_SECRET}}
          project_name: ${{github.repository_owner}}/${{github.event.repository.name}}
          branch: ${{github.head_ref}}
          repo_name: ${{github.event.repository.name}}
          namespace: ${{github.repository_owner}}
          pr_number: ${{github.event.number}}
          additional_params: --sast-incremental --sast-filter '!vul,!swagger,!docs,!*_test.go' --sca-filter '!root' --iac-security-filter '!infra'
